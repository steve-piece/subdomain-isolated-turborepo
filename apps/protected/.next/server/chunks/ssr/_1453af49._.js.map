{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///Users/splmbp3/projects/platforms/packages/shared/src/lib/domains.ts"],"sourcesContent":["export const protocol = process.env.NODE_ENV === 'production' ? 'https' : 'http';\nexport const marketingDomain = process.env.NEXT_PUBLIC_MARKETING_DOMAIN || process.env.NEXT_PUBLIC_ROOT_DOMAIN || 'localhost:3000';\nexport const appDomain = process.env.NEXT_PUBLIC_APP_DOMAIN || 'localhost:3000';\n\n\n"],"names":[],"mappings":";;;;;AAAO,MAAM,WAAW,6EAAkD;AACnE,MAAM,kBAAkB,QAAQ,GAAG,CAAC,4BAA4B,IAAI,QAAQ,GAAG,CAAC,uBAAuB,IAAI;AAC3G,MAAM,YAAY,QAAQ,GAAG,CAAC,sBAAsB,IAAI","debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///Users/splmbp3/projects/platforms/packages/shared/src/lib/cn.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///Users/splmbp3/projects/platforms/packages/shared/src/index.ts"],"sourcesContent":["export * from './lib/domains';\nexport * from './lib/cn';\n\n\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///Users/splmbp3/projects/platforms/apps/protected/app/s/%5Bsubdomain%5D/page.tsx"],"sourcesContent":["import type { Metadata } from 'next';\nimport { appDomain } from '@voldegard/shared';\n\nexport async function generateMetadata({ params }: { params: Promise<{ subdomain: string }> }): Promise<Metadata> {\n  const { subdomain } = await params;\n  return {\n    title: `${subdomain}.${appDomain}`\n  };\n}\n\nexport default async function SubdomainPage({ params }: { params: Promise<{ subdomain: string }> }) {\n  const { subdomain } = await params;\n  return (\n    <div className=\"p-8\">\n      <h1 className=\"text-2xl font-bold\">{subdomain}.{appDomain}</h1>\n      <p>Protected tenant route</p>\n    </div>\n  );\n}\n\n\n"],"names":[],"mappings":";;;;;AACA;AAAA;;;AAEO,eAAe,iBAAiB,EAAE,MAAM,EAA8C;IAC3F,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM;IAC5B,OAAO;QACL,OAAO,GAAG,UAAU,CAAC,EAAE,2IAAA,CAAA,YAAS,EAAE;IACpC;AACF;AAEe,eAAe,cAAc,EAAE,MAAM,EAA8C;IAChG,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM;IAC5B,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;;oBAAsB;oBAAU;oBAAE,2IAAA,CAAA,YAAS;;;;;;;0BACzD,8OAAC;0BAAE;;;;;;;;;;;;AAGT","debugId":null}}]
}