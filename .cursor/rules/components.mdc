---
globs: *.tsx
alwaysApply: false
---

# Component and Page Structure Rules

## Wrappers and Thin Pages

- Keep `page.tsx` minimal; import a feature wrapper component that composes the page.
- Co-locate feature UI and actions under `apps/<app>/components/<feature>/...`.

Target structure example:

- `apps/marketing/components/auth/login/login-wrapper.tsx` (composes the page)
- `apps/marketing/components/auth/login/login-form.tsx`
- `apps/marketing/components/auth/login/login-cta.tsx`
- `apps/marketing/components/auth/login/actions.ts`
- `apps/marketing/app/login/page.tsx` imports `login-wrapper`
- `apps/marketing/app/login/layout.tsx` provides page-level metadata and layout

## Clean URLs in UI

- Links and router navigation must be clean (`/admin`, `/auth/login`).
- Never construct or display `/s/${subdomain}/*` in UI.

## Shared UI

- Use `@workspace/ui` for shared components and `cn` from `@workspace/ui/lib/utils`.
- Prefer composition over prop drilling; keep components small and focused.

## Client vs Server

- Add `"use client"` only when required (hooks, event handlers, browser APIs).
- Avoid server-only imports in client components.

## Props and Types

- Components that need tenant context receive `subdomain: string` explicitly.
- Export explicit prop interfaces; avoid `any`.
